global
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice

defaults
  log global
  mode http
  option httplog
  option dontlognull
  timeout connect 5000
  timeout client 10000
  timeout server 10000

listen stats :70
  stats enable
  stats uri /

frontend balancer
  bind *:80 
  bind *:{{ proxy_port }} ssl crt /etc/haproxy/bundle_dh.pem ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4 no-sslv3
  
  #bind 10.20.30.40:80
  #redirect location https://example.org:443

  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  http-request set-header X-Forwarded-Port %[dst_port]

  mode http
  option httplog
  option dontlognull

  acl has_legacy path_beg /abc /def
  acl has_web1 path_beg /web1 
  acl has_web2 path_beg /web2 
  acl has_go path_beg /go
  acl has_feed path_beg /feed

  #Redirect
  acl bar.com hdr(host) -i www.bar.com


  http-request set-header X-Location-Path %[capture.req.uri] if has_legacy
  http-request set-header X-Location-Host %[capture.req.uri] if has_legacy

  http-request replace-header X-Location-Host /([^/]*)/ \1 if has_legacy
  http-request replace-header X-Location-Path [^/]+/(.*) \1 if has_legacy

  http-request redirect location https://%[hdr(X-Location-Host)]domain.com/%[hdr(X-Location-Path)] if has_legacy_abc

  #... 
  redirect prefix http://www.bar.com code 301 if { hdr(host) -i foo.com }
  redirect prefix http://www.bar.com code 301 if { hdr(host) -i www.foo.com }
  #...
  use_backend web1 if has_web1
  use_backend web2 if has_web2
  use_backend go if has_go
  use_backend feed if has_feed
  #...
  use_backend     bar.com_cluster if bar.com
  
  use backend abc_backend if { hdr(Host) -i abcdomain.com }
  use backend def_backend if { hdr(Host) -i defdomain.com }

  default_backend web2

backend abc_backend
    balance roundrobin
    option httpclose
    option forwardfor
    server abc_backend abcdomain.com:80 check

backend def_backend
    balance roundrobin
    option httpclose
    option forwardfor
    server def_backend defdomain.com:80 check

backend bar.com_cluster
    balance roundrobin
    option httpclose
    option forwardfor
    server bar bar.com:80 check

backend web1
  #balance roundrobin
  #cookie SERVERID insert
  #option httpchk HEAD /check.txt HTTP/1.0
  #option httpclose
  #option forwardfor
  server web1 google.com:80 cookie web1 check

backend go 
  timeout connect 50000
  server go go.convo.com:8153 check 

backend feed
  balance leastconn
  option httpclose
  option forwardfor
  cookie JSESSIONID prefix
  server feed 192.168.240.50:8080 cookie A check 
  #server web3 build04.convoapps.com:80 check resolvers dns 
 

backend web2
  mode http
  option forwardfor
  # http-request set-header X-Forwarded-Port %[dst_port]
  balance roundrobin
  server weba weba:80 check
  server webb webb:80 check
  server webc webc:80 check
 
  
